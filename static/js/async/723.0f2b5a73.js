"use strict";(self.webpackChunkew_auto_import_tool_docs=self.webpackChunkew_auto_import_tool_docs||[]).push([["723"],{3330:function(e,n,t){t.r(n),t.d(n,{default:()=>l});var r=t(2676),i=t(453);function s(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",code:"code",strong:"strong",pre:"pre",ul:"ul",li:"li",ol:"ol"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"declaration-generator",children:["Declaration Generator",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#declaration-generator",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"The Declaration Generator module is responsible for creating and managing the TypeScript declaration files required for auto-import functionality. It provides functions to generate placeholder declaration files that will be automatically updated by the auto-import plugins during development."}),"\n",(0,r.jsxs)(n.h2,{id:"api-reference",children:["API Reference",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#api-reference",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"generatedeclarationfiles",children:[(0,r.jsx)(n.code,{children:"generateDeclarationFiles"}),(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#generatedeclarationfiles",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function generateDeclarationFiles(\n  options: GenerateDeclarationFilesOptions\n): Promise<GenerateDeclarationFilesResult>;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"options: GenerateDeclarationFilesOptions"})," - Configuration options for declaration file generation","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"path?: string"})," - The path to the project directory (defaults to current directory)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Promise<GenerateDeclarationFilesResult>"})," - A promise that resolves to the generation result","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"success: boolean"})," - Whether the generation was successful"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"componentsDeclarationPath: string"})," - The path to the components declaration file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"autoImportsDeclarationPath: string"})," - The path to the auto-imports declaration file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filesCreated: boolean"})," - Whether new files were created or existing files were preserved"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { generateDeclarationFiles } from "ew-auto-import-tool";\n\nasync function setupDeclarations() {\n  try {\n    const result = await generateDeclarationFiles({\n      path: "./my-vue-project",\n    });\n\n    if (result.success) {\n      console.log("Declaration files generated successfully:");\n      console.log(`Components: ${result.componentsDeclarationPath}`);\n      console.log(`Auto-imports: ${result.autoImportsDeclarationPath}`);\n\n      if (result.filesCreated) {\n        console.log("New declaration files were created");\n      } else {\n        console.log("Existing declaration files were preserved");\n      }\n    } else {\n      console.error("Failed to generate declaration files");\n    }\n  } catch (error) {\n    console.error("Error generating declaration files:", error);\n  }\n}\n\nsetupDeclarations();\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"implementation-details",children:["Implementation Details",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#implementation-details",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"The Declaration Generator performs the following operations:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"File Path Resolution"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Determines the paths for the declaration files"}),"\n",(0,r.jsx)(n.li,{children:"By default, creates files in the project root directory"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"File Existence Check"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Checks if declaration files already exist"}),"\n",(0,r.jsx)(n.li,{children:"Preserves existing files to avoid overwriting user modifications"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Template Generation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Creates placeholder declaration files with minimal content"}),"\n",(0,r.jsx)(n.li,{children:"These files will be automatically updated by the plugins during development"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"declaration-file-templates",children:["Declaration File Templates",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#declaration-file-templates",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"The module generates two declaration files:"}),"\n",(0,r.jsxs)(n.h3,{id:"componentsdts",children:["components.d.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#componentsdts",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"/* eslint-disable */\n/* prettier-ignore */\n// @ts-nocheck\n// Generated by unplugin-vue-components\n// Read more: https://github.com/vuejs/core/pull/3399\nimport '@vue/runtime-core'\n\nexport {};\n\ndeclare module \"@vue/runtime-core\" {\n  export interface GlobalComponents {\n    // This will be filled automatically by the plugin\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"auto-importsdts",children:["auto-imports.d.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#auto-importsdts",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"/* eslint-disable */\n/* prettier-ignore */\n// @ts-nocheck\n// Generated by unplugin-auto-import\nexport {}\ndeclare global {\n  // This will be filled automatically by the plugin\n}\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"source-code-analysis",children:["Source Code Analysis",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#source-code-analysis",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"The Declaration Generator uses the file system to create declaration files. It follows these steps:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Determine the paths for the declaration files"}),"\n",(0,r.jsx)(n.li,{children:"Check if the files already exist"}),"\n",(0,r.jsx)(n.li,{children:"If they don't exist, create them with placeholder content"}),"\n",(0,r.jsx)(n.li,{children:"Return the paths and creation status"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Simplified implementation\nasync function generateDeclarationFiles(\n  options: GenerateDeclarationFilesOptions\n): Promise<GenerateDeclarationFilesResult> {\n  const projectPath = options.path || process.cwd();\n\n  // Determine file paths\n  const componentsDeclarationPath = path.join(projectPath, "components.d.ts");\n  const autoImportsDeclarationPath = path.join(\n    projectPath,\n    "auto-imports.d.ts"\n  );\n\n  // Check if files already exist\n  const componentsExists = fs.existsSync(componentsDeclarationPath);\n  const autoImportsExists = fs.existsSync(autoImportsDeclarationPath);\n\n  let filesCreated = false;\n\n  // Create components declaration file if it doesn\'t exist\n  if (!componentsExists) {\n    const componentsTemplate = `/* eslint-disable */\n/* prettier-ignore */\n// @ts-nocheck\n// Generated by unplugin-vue-components\n// Read more: https://github.com/vuejs/core/pull/3399\nimport \'@vue/runtime-core\'\n\nexport {}\n\ndeclare module \'@vue/runtime-core\' {\n  export interface GlobalComponents {\n    // This will be filled automatically by the plugin\n  }\n}`;\n\n    fs.writeFileSync(componentsDeclarationPath, componentsTemplate, "utf-8");\n    filesCreated = true;\n  }\n\n  // Create auto-imports declaration file if it doesn\'t exist\n  if (!autoImportsExists) {\n    const autoImportsTemplate = `/* eslint-disable */\n/* prettier-ignore */\n// @ts-nocheck\n// Generated by unplugin-auto-import\nexport {}\ndeclare global {\n  // This will be filled automatically by the plugin\n}`;\n\n    fs.writeFileSync(autoImportsDeclarationPath, autoImportsTemplate, "utf-8");\n    filesCreated = true;\n  }\n\n  return {\n    success: true,\n    componentsDeclarationPath,\n    autoImportsDeclarationPath,\n    filesCreated,\n  };\n}\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"error-handling",children:["Error Handling",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#error-handling",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"The Declaration Generator includes robust error handling to provide clear feedback when issues are encountered:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"File system access errors"}),"\n",(0,r.jsx)(n.li,{children:"Permission issues when creating files"}),"\n",(0,r.jsx)(n.li,{children:"Path resolution errors"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These errors are propagated to the caller with descriptive messages to help users troubleshoot issues."}),"\n",(0,r.jsxs)(n.h2,{id:"related-modules",children:["Related Modules",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#related-modules",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/en/api/ts-config-manager",children:"TypeScript Config Manager"})," - Updates the TypeScript configuration to include the declaration files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/en/api/vite-config-manager",children:"Vite Config Manager"})," - Configures the plugins that will update the declaration files"]}),"\n"]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}let l=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["en%2Fapi%2Fdeclaration-generator.md"]={toc:[{text:"API Reference",id:"api-reference",depth:2},{text:"`generateDeclarationFiles`",id:"generatedeclarationfiles",depth:3},{text:"Implementation Details",id:"implementation-details",depth:2},{text:"Declaration File Templates",id:"declaration-file-templates",depth:2},{text:"components.d.ts",id:"componentsdts",depth:3},{text:"auto-imports.d.ts",id:"auto-importsdts",depth:3},{text:"Source Code Analysis",id:"source-code-analysis",depth:2},{text:"Error Handling",id:"error-handling",depth:2},{text:"Related Modules",id:"related-modules",depth:2}],title:"Declaration Generator",headingTitle:"Declaration Generator",frontmatter:{}}}}]);