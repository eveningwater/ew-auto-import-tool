"use strict";(self.webpackChunkew_auto_import_tool_docs=self.webpackChunkew_auto_import_tool_docs||[]).push([["525"],{1251:function(e,n,t){t.r(n),t.d(n,{default:()=>a});var i=t(2676),l=t(453);function s(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",h3:"h3",pre:"pre"},(0,l.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"基本示例",children:["基本示例",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#基本示例",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["本页面提供了 ",(0,i.jsx)(n.code,{children:"ew-auto-import-tool"})," 的基本使用示例，帮助您快速了解工具的使用方法和效果。"]}),"\n",(0,i.jsxs)(n.h2,{id:"使用前",children:["使用前",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用前",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"在使用自动导入工具之前，您需要手动导入每个组件，这会导致代码冗长且难以维护。"}),"\n",(0,i.jsxs)(n.h3,{id:"appvue-使用前",children:["App.vue (使用前)",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appvue-使用前",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vue",children:'<template>\n  <div class="container">\n    <el-button type="primary">主要按钮</el-button>\n    <el-input v-model="input" placeholder="请输入内容"></el-input>\n    <el-select v-model="value" placeholder="请选择">\n      <el-option\n        v-for="item in options"\n        :key="item.value"\n        :label="item.label"\n        :value="item.value"\n      >\n      </el-option>\n    </el-select>\n  </div>\n</template>\n\n<script setup lang="ts">\nimport { ref } from "vue";\n// 需要手动导入每个组件\nimport { ElButton, ElInput, ElSelect, ElOption } from "element-plus";\n// 还需要手动导入样式\nimport "element-plus/dist/index.css";\n\nconst input = ref("");\nconst value = ref("");\nconst options = [\n  { value: "选项1", label: "黄金糕" },\n  { value: "选项2", label: "双皮奶" },\n  { value: "选项3", label: "蚵仔煎" },\n];\n<\/script>\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"viteconfigts-使用前",children:["vite.config.ts (使用前)",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#viteconfigts-使用前",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { defineConfig } from "vite";\nimport vue from "@vitejs/plugin-vue";\n\nexport default defineConfig({\n  plugins: [vue()],\n});\n'})}),"\n",(0,i.jsxs)(n.h2,{id:"使用后",children:["使用后",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用后",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["使用 ",(0,i.jsx)(n.code,{children:"ew-auto-import-tool"})," 配置后，您无需手动导入组件和样式，代码更加简洁和易于维护。"]}),"\n",(0,i.jsxs)(n.h3,{id:"appvue-使用后",children:["App.vue (使用后)",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appvue-使用后",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vue",children:'<template>\n  <div class="container">\n    <el-button type="primary">主要按钮</el-button>\n    <el-input v-model="input" placeholder="请输入内容"></el-input>\n    <el-select v-model="value" placeholder="请选择">\n      <el-option\n        v-for="item in options"\n        :key="item.value"\n        :label="item.label"\n        :value="item.value"\n      >\n      </el-option>\n    </el-select>\n  </div>\n</template>\n\n<script setup lang="ts">\nimport { ref } from "vue";\n\n// 无需手动导入组件和样式！\n\nconst input = ref("");\nconst value = ref("");\nconst options = [\n  { value: "选项1", label: "黄金糕" },\n  { value: "选项2", label: "双皮奶" },\n  { value: "选项3", label: "蚵仔煎" },\n];\n<\/script>\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"viteconfigts-使用后",children:["vite.config.ts (使用后)",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#viteconfigts-使用后",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { defineConfig } from "vite";\nimport vue from "@vitejs/plugin-vue";\nimport AutoImport from "unplugin-auto-import/vite";\nimport Components from "unplugin-vue-components/vite";\nimport { ElementPlusResolver } from "unplugin-vue-components/resolvers";\n\nexport default defineConfig({\n  plugins: [\n    vue(),\n    AutoImport({\n      resolvers: [ElementPlusResolver()],\n    }),\n    Components({\n      resolvers: [ElementPlusResolver()],\n    }),\n  ],\n});\n'})}),"\n",(0,i.jsxs)(n.h2,{id:"运行示例",children:["运行示例",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#运行示例",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["您可以在项目的 ",(0,i.jsx)(n.code,{children:"examples"})," 目录中找到完整的示例项目。按照以下步骤运行示例："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# 进入示例目录\ncd examples\n\n# 安装依赖\npnpm install\n\n# 启动开发服务器\npnpm dev\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"示例项目结构",children:["示例项目结构",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#示例项目结构",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"示例项目包含以下文件和目录："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"examples/\n├── src/\n│   ├── App.vue         # 使用自动导入的组件\n│   ├── components/     # 自定义组件目录\n│   └── main.ts         # 入口文件\n├── auto-imports.d.ts   # 自动生成的API声明文件\n├── components.d.ts     # 自动生成的组件声明文件\n├── index.html          # HTML入口文件\n├── package.json        # 项目配置文件\n├── tsconfig.json       # TypeScript配置\n├── tsconfig.node.json  # Node.js TypeScript配置\n└── vite.config.ts      # Vite配置文件\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"更多示例",children:["更多示例",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#更多示例",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["查看 ",(0,i.jsx)(n.a,{href:"/examples/project-structure",children:"项目结构对比"})," 了解更多关于配置前后项目结构的变化。"]})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}let a=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["zh%2Fexamples%2Findex.md"]={toc:[{text:"使用前",id:"使用前",depth:2},{text:"App.vue (使用前)",id:"appvue-使用前",depth:3},{text:"vite.config.ts (使用前)",id:"viteconfigts-使用前",depth:3},{text:"使用后",id:"使用后",depth:2},{text:"App.vue (使用后)",id:"appvue-使用后",depth:3},{text:"vite.config.ts (使用后)",id:"viteconfigts-使用后",depth:3},{text:"运行示例",id:"运行示例",depth:2},{text:"示例项目结构",id:"示例项目结构",depth:2},{text:"更多示例",id:"更多示例",depth:2}],title:"基本示例",headingTitle:"基本示例",frontmatter:{}}}}]);